Help on module base64:

NAME
    base64 - RFC 3548: Base16, Base32, Base64 Data Encodings

FILE
    /usr/lib/python2.7/base64.py

MODULE DOCS
    http://docs.python.org/library/base64

FUNCTIONS
    b16decode(s, casefold=False)
        Decode a Base16 encoded string.
        
        s is the string to decode.  Optional casefold is a flag specifying whether
        a lowercase alphabet is acceptable as input.  For security purposes, the
        default is False.
        
        The decoded string is returned.  A TypeError is raised if s were
        incorrectly padded or if there are non-alphabet characters present in the
        string.
    
    b16encode(s)
        Encode a string using Base16.
        
        s is the string to encode.  The encoded string is returned.
    
    b32decode(s, casefold=False, map01=None)
        Decode a Base32 encoded string.
        
        s is the string to decode.  Optional casefold is a flag specifying whether
        a lowercase alphabet is acceptable as input.  For security purposes, the
        default is False.
        
        RFC 3548 allows for optional mapping of the digit 0 (zero) to the letter O
        (oh), and for optional mapping of the digit 1 (one) to either the letter I
        (eye) or letter L (el).  The optional argument map01 when not None,
        specifies which letter the digit 1 should be mapped to (when map01 is not
        None, the digit 0 is always mapped to the letter O).  For security
        purposes the default is None, so that 0 and 1 are not allowed in the
        input.
        
        The decoded string is returned.  A TypeError is raised if s were
        incorrectly padded or if there are non-alphabet characters present in the
        string.
    
    b32encode(s)
        Encode a string using Base32.
        
        s is the string to encode.  The encoded string is returned.
    
    b64decode(s, altchars=None)
        Decode a Base64 encoded string.
        
        s is the string to decode.  Optional altchars must be a string of at least
        length 2 (additional characters are ignored) which specifies the
        alternative alphabet used instead of the '+' and '/' characters.
        
        The decoded string is returned.  A TypeError is raised if s were
        incorrectly padded or if there are non-alphabet characters present in the
        string.
    
    b64encode(s, altchars=None)
        Encode a string using Base64.
        
        s is the string to encode.  Optional altchars must be a string of at least
        length 2 (additional characters are ignored) which specifies an
        alternative alphabet for the '+' and '/' characters.  This allows an
        application to e.g. generate url or filesystem safe Base64 strings.
        
        The encoded string is returned.
    
    decode(input, output)
        Decode a file.
    
    decodestring(s)
        Decode a string.
    
    encode(input, output)
        Encode a file.
    
    encodestring(s)
        Encode a string into multiple lines of base-64 data.
    
    standard_b64decode(s)
        Decode a string encoded with the standard Base64 alphabet.
        
        s is the string to decode.  The decoded string is returned.  A TypeError
        is raised if the string is incorrectly padded or if there are non-alphabet
        characters present in the string.
    
    standard_b64encode(s)
        Encode a string using the standard Base64 alphabet.
        
        s is the string to encode.  The encoded string is returned.
    
    urlsafe_b64decode(s)
        Decode a string encoded with the standard Base64 alphabet.
        
        s is the string to decode.  The decoded string is returned.  A TypeError
        is raised if the string is incorrectly padded or if there are non-alphabet
        characters present in the string.
        
        The alphabet uses '-' instead of '+' and '_' instead of '/'.
    
    urlsafe_b64encode(s)
        Encode a string using a url-safe Base64 alphabet.
        
        s is the string to encode.  The encoded string is returned.  The alphabet
        uses '-' instead of '+' and '_' instead of '/'.

DATA
    __all__ = ['encode', 'decode', 'encodestring', 'decodestring', 'b64enc...



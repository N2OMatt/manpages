Help on module _json:

NAME
    _json - json speedups

FILE
    /usr/lib/python2.7/lib-dynload/_json.x86_64-linux-gnu.so

MODULE DOCS
    http://docs.python.org/library/_json

CLASSES
    __builtin__.object
        Encoder
        Scanner
    
    make_encoder = class Encoder(__builtin__.object)
     |  _iterencode(obj, _current_indent_level) -> iterable
     |  
     |  Methods defined here:
     |  
     |  __call__(...)
     |      x.__call__(...) <==> x(...)
     |  
     |  __init__(...)
     |      x.__init__(...) initializes x; see help(type(x)) for signature
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  default
     |      default
     |  
     |  encoder
     |      encoder
     |  
     |  indent
     |      indent
     |  
     |  item_separator
     |      item_separator
     |  
     |  key_separator
     |      key_separator
     |  
     |  markers
     |      markers
     |  
     |  skipkeys
     |      skipkeys
     |  
     |  sort_keys
     |      sort_keys
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __new__ = <built-in method __new__ of type object>
     |      T.__new__(S, ...) -> a new object with type S, a subtype of T
    
    make_scanner = class Scanner(__builtin__.object)
     |  JSON scanner object
     |  
     |  Methods defined here:
     |  
     |  __call__(...)
     |      x.__call__(...) <==> x(...)
     |  
     |  __init__(...)
     |      x.__init__(...) initializes x; see help(type(x)) for signature
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  encoding
     |      encoding
     |  
     |  object_hook
     |      object_hook
     |  
     |  object_pairs_hook
     |      object_pairs_hook
     |  
     |  parse_constant
     |      parse_constant
     |  
     |  parse_float
     |      parse_float
     |  
     |  parse_int
     |      parse_int
     |  
     |  strict
     |      strict
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __new__ = <built-in method __new__ of type object>
     |      T.__new__(S, ...) -> a new object with type S, a subtype of T

FUNCTIONS
    encode_basestring_ascii(...)
        encode_basestring_ascii(basestring) -> str
        
        Return an ASCII-only JSON representation of a Python string
    
    scanstring(...)
        scanstring(basestring, end, encoding, strict=True) -> (str, end)
        
        Scan the string s for a JSON string. End is the index of the
        character in s after the quote that started the JSON string.
        Unescapes all valid JSON string escape sequences and raises ValueError
        on attempt to decode an invalid string. If strict is False then literal
        control characters are allowed in the string.
        
        Returns a tuple of the decoded string and the index of the character in s
        after the end quote.


